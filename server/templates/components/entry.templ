package components

import (
	"github.com/etsune/bkors/server/models"
	"github.com/etsune/bkors/server/utils"
	"strconv"
)

script showEditor(id string) {
    if ( document.getElementById(id).className.match(/(?:^|\s)hidden(?!\S)/) ) {
        document.getElementById(id).className = "";
    } else {
        document.getElementById(id).className = "hidden";
    }
}

templ Content(content []*utils.Content, count int) {
	if count > 5 {
		return
	}
	for _, cont := range content {
		if len(cont.Content) > 0 {
			if cont.Tag == "i" {
				<span class={ "inline whitespace-pre-line text-emerald-600 italic " }>
					@Content(cont.Content, count + 1)
				</span>
			} else if cont.Tag == "a" {
				<a href={ templ.URL("/search?s=" + cont.Text + "#" + cont.Text) } class={ "inline whitespace-pre-line text-blue-500 " + cont.Class }>
					@Content(cont.Content, count + 1)
				</a>
			} else {
				<span class={ "inline whitespace-pre-line " + cont.Class }>
					@Content(cont.Content, count + 1)
				</span>
			}
		} else {
			if cont.Tag == "i" {
				<span class={ "inline whitespace-pre-line text-emerald-600 italic " }>
					{ cont.Text }
				</span>
			} else if cont.Tag == "a" {
				<a href={ templ.URL("/search?s=" + cont.Text + "#" + cont.Text) } class={ "inline whitespace-pre-line text-blue-500 " + cont.Class }>
					{ cont.Text }
				</a>
			} else {
				<span class={ "inline whitespace-pre-line " + cont.Class }>
					{ cont.Text }
				</span>
			}
		}
	}
}

templ Entry(entry models.DBEntry, u *models.DBUser) {
	<div class={ "border rounded-md p-4 text-base relative", templ.KV("border-l-orange-500 border-l-2", !entry.IsReviewed) } lang="kr">
		//
		<div id={ entry.Entry.Hangul } class="pb-3">
			<div class="whitespace-nowrap text-lg/none">
				<div class="inline-block font-semibold">
					<span>{ entry.Entry.Hangul }</span>
				</div>
				if len(entry.Entry.HomonymicNumber) > 0 {
					<div class="inline-block border-zinc-500 align-super">
						<span class="font-serif mx-1 text-xs">{ entry.Entry.HomonymicNumber }</span>
					</div>
				}
				if len(entry.Entry.Hanja) > 0 {
					<span class="text-xl text-zinc-500">〔{ entry.Entry.Hanja }〕</span>
				}
			</div>
			<div class="whitespace-pre-wrap">
				@Content(utils.ConvertBodyToContent(entry.Entry.Body), 0)
			</div>
			<div class="absolute top-3 right-2">
				//<div class="">@IconPage()</div>
				<span class="cursor-pointer transition m-2 hover:text-blue-500" onCLick={ showEditor("editor-" + entry.Id.Hex()) }>Editor</span>
				<a class="transition m-2 hover:text-blue-500" href={ templ.URL("/page/bkors/" + strconv.Itoa(entry.Placement.Volume) + "/" + strconv.Itoa(entry.Placement.Page)) }>Page</a>
			</div>
		</div>
		<hr/>
		<img class="w-2/3 h-auto mt-4" src={ "/static/img/" + entry.Image }/>
		<div id={ "editor-" + entry.Id.Hex() } class="hidden">
			<hr/>
			@Editor(entry, u)
		</div>
	</div>
}

templ Entries(entries *[]models.DBEntry, u *models.DBUser) {
	if len(*entries) > 0 {
		for _, entry := range *entries {
			@Entry(entry, u)
		}
	} else {
		<div>Статей по запросу не найдено.</div>
	}
}

templ Editor(entry models.DBEntry, u *models.DBUser) {
	<form>
		<div class="flex flex-row flex-wrap gap-2 max-w-2xl mx-auto pt-4 justify-between">
			<div class="basis-full">
				<span class="inline pr-2">Отредактировано:</span>
				<input class="border rounded-md p-1 inline" name="is_reviewed" type="checkbox" value="true" checked?={ entry.IsReviewed }/>
			</div>
			<div class="">
				<span class="pr-2">Хангыль:</span>
				<input class="border rounded-md p-1" name="hangul" value={ entry.Entry.Hangul }/>
			</div>
			<div class="">
				<span class="pr-2">Ханча:</span>
				<input class="border rounded-md p-1" name="hanja" value={ entry.Entry.Hanja }/>
			</div>
			<div class="">
				<span class="pr-2">№ омонима:</span>
				<input class="border rounded-md p-1" name="hn" value={ entry.Entry.HomonymicNumber }/>
			</div>
			<div class="">
				<span class="pr-2">Транскрипция:</span>
				<input class="border rounded-md p-1" name="ts" value={ entry.Entry.Transcription }/>
			</div>
			<div class="basis-full">
				<label for="body" class="leading-6 block pt-2">Текст статьи:</label>
				<textarea rows="10" name="body" class="w-full border rounded-md p-1">
					{ entry.Entry.Body }
				</textarea>
			</div>
			//	<div class="basis-full">
			//		<span class="pr-2">Meta:</span>
			//		<input class="w-full border rounded-md p-1" name="meta" value=""/>
			//	</div>
			if u == nil {
				<div class="basis-full italic text-amber-600">
					Вы не вошли в аккаунт, правка будет отправлена анонимно.
				</div>
			}
			<div>
				<button
 					class="border rounded-md p-1"
 					hx-target={ "#res" + entry.Id.Hex() }
 					hx-post={ "/entries/" + entry.Id.Hex() + "/edits" }
 					hx-swap="innerHTML"
				>
					Сохранить
				</button>
				<span class="italic pl-2" id={ "res" + entry.Id.Hex() }></span>
			</div>
		</div>
	</form>
}
